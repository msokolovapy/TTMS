TTMS
TO DO LIST


*for creating a match manually:
	*CreateMatchManually pop up window with 2 drop down lists for Player1 and Player2 populated from gamedayplayer_list
	*Create match button (submit type)
	*@app.route('/admin/create_match_manually',methods = ['GET','POST']
		def create_match_manually():
			            restored_gameday_obj = deserialize_gameday_obj(session=session)
                        gameday_players_list = restored_gameday_obj.get_gameday_players()
                        serialised_players_list = [player.to_dict() for player in gameday_players_list]
                        sorted_serialised_players_list = sorted(serialised_players_list, key = 
                                                lambda x: x['last_played'] if x['last_played'] is not None 
                                                else datetime(1,1,1))
                        drop_down_list = create_drop_down_list(sorted_serialised_players_list)
			           
                        
                        player_1_original_login_name = request_form_info('player_1_original_login_name')
                        player_2_original_login_name = request_form_info('player_2_original_login_name')

			            player_1_updated_login_name = request_form_info('player_1_updated_login_name')
			            player_2_updated_login_name = request_form_info('player_2_updated_login_name')

                        match_to_update = Match(player_1_original_login_name,player_2_original_login_name)
                        restored_gameday_obj.update_match(match_to_update,player_1_updated_login_name, player_2_updated_login_name):

                        for player in gameday_players_list:
                            if player:
                                for player_name in player_duo:
                                    if player.player_login_name in player_duo:
                                        player.status = 'reserve'        
                            else:
                                print(f'No player found when attempting to manually create match and update player status')
                        
			            serialize_gameday_obj(restored_gameday_obj)
			            return render_template('admin.html',four_matches_list = restored_gameday_obj.create_four_matches, user_name = admin_name, drop_down_list = drop_down_list)
	
* New Game button: action linked to admin/refresh route

















